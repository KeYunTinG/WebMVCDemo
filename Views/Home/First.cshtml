
@{
    ViewData["Title"] = "First";
}

<h1>First Ajax Demo</h1>
<button id="buttonStart" class="btn btn-primary">Start</button>
<button id="buttonStop" class="btn btn-warning">Ajax 停止</button>
<img src="~/images/Spinner.gif" id="img1" style="display:none" />
<div id="div1">123</div>

@section Styles{
    <style></style>
}
@section Scripts{
    <script>
        const btn = document.querySelector('#buttonStart')
        const btnStop = document.querySelector('#buttonStop');
        const myDiv = document.querySelector('#div1')
        const imgLoading = document.querySelector('#img1');
        let abortController;
        btnStop.addEventListener('click', () => {
            if (abortController) {
                abortController.abort();
            }
        })

        btn.addEventListener('click', async () => {
            try {
                imgLoading.style.display = "inline" //顯示執行的圖片
                btn.setAttribute('disabled', 'disabled'); //讓按鈕不能使用

                abortController = new AbortController();
                const signal = abortController.signal;
                setTimeout(() => {
                    abortController.abort();
                }, 5000);

                const response = await fetch('@Url.Content("~/Home/Hello")', { signal });
                console.log(response);

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.text();
                myDiv.innerHTML = `<h2>${data}</h2>`;
            } catch (error) {
                console.error('Fetch error:', error);
                myDiv.innerHTML = `<h2>${error.message}</h2>`;
            }finally{
                imgLoading.style.display = "none" //隱藏執行的圖片
                btn.removeAttribute('disabled'); //讓按鈕可以按
            }
        });
    </script>
}

